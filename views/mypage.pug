doctype html
html
    head
        title #{pageTitle} | 마이페이지
        style.
            table {
            font-family: arial, sans-serif;
            border-collapse: collapse;
            width: 100%;
            }
            td, th {
            border: 1px solid #BDC4CF;
            text-align: left;
            padding: 8px;
            }
            tr:nth-child(even) {
            background-color: #BDC4CF;
            }
    body
script.
    const init = async () => {
        const createUserTable = (userData) => {
            const body = document.querySelector('body');
            body.innerHTML += `
            <h2>User Info</h2>
                <table>
                <tr>
                    <th>ID</th>
                    <th>nickname</th>
                    <th>email</th>
                    <th>createdAt</th>
                </tr>
                <tr>
                    <td>${userData.user.userId}</td>
                    <td>${userData.user.nickname}</td>
                    <td>${userData.user.email}</td>
                    <td>${userData.user.createdAt}</td>
                </tr>
                </table>
            `
        }
        const createPetTable = (petData) => {
            const body = document.querySelector('body');
            body.innerHTML += `
            <h2>Pet Info</h2>
                <table>
                <tr>
                    <th>petName</th>
                    <th>petGender</th>
                    <th>petAge</th>
                </tr>
                ${petData.pet.map((pet)=>{
                    return `<tr><td>${pet.petName}</td><td>${pet.petGender}</td><td>${pet.petAge}</td></tr>`              
                })}
                </table>
            `
        }
            //reservation 가져오기 
        const createReservationTable = (userReservations) => {
            const body = document.querySelector('body');
            
            let reservationsBodyHTML = '';

           userReservations.map((reservation)=>{
            reservationsBodyHTML += `                  
                    <tr>
                    <td>${reservation.User.nickname}</td>
                    <td>${reservation.PetSitter.sitterName}</td>
                    <td>${reservation.Pet.petName}</td>
                    <td>${reservation.startDate}</td>
                    <td>${reservation.endDate}</td>
                    </tr>                    
                    `
            })

            let reservationHTML = `
                   <h2>Reservation Info</h2>
                        <table>
                        <tr>
                            <th>유저명</th>
                            <th>나의 반려동물</th>
                            <th>예약한 시터 성명</th>
                            <th>예약 일자</th>
                            <th>예약 종료 일자</th>
                        </tr>
                        
                        <tbody class="reservationsBody">
                            ${reservationsBodyHTML}
                        </tbody>
                        </table>
                     `

           body.innerHTML += reservationHTML;

          
        }

            //users에서 reservation안에 넣을 user.nickname 값을 요청
        const userReservations = async () => {
            const reservations = await fetch('/api/reservation/me')
            return await reservations.json()
        }

        const userReservationsData = await userReservations();      
        createReservationTable(userReservationsData.userReservations);

        
            //users에서 reservation안에 넣을 pets.petName 값을 요청
      
      
       
        //-     //users에서 reservation안에 넣을 user.nickname 값을 요청
        //- const getNames = async () => {
        //-     let getNick = await fetch('/api/users/getName')   
        //-     return await getNick.json()    
        //- }
        //-     //users에서 reservation안에 넣을 user.nickname 값을 요청
        //- const getNames = async () => {
        //-     let getNick = await fetch('/api/users/getName')   
        //-     return await getNick.json()    
        //- }

        const getUserInfo = async () => {
                let userInfo = await fetch('/api/users/me')
                return await userInfo.json()
        }
        const userData = await getUserInfo()
        createUserTable(userData)
        // 1. pet정보를 가져오는 함수 만들기
        // 2. 펫 정보로 펫 테이블을 만들기
        const getPets = async () => {
            let petInfo = await fetch('/api/pets/me')
            return await petInfo.json()
        }
        const petData = await getPets();

        createPetTable(petData) 
    }
    init();

    
include partials/footer.pug
//- include partials/authModal.pug